/*
 * @author AntKerf
 */

import webscrap.WebScrap;
import webscrap.MyUtil.*;
import Charts.ChartBuilder;
import com.github.lgooddatepicker.components.DatePicker;
import com.github.lgooddatepicker.components.DatePickerSettings;
import java.time.LocalDate;
import javax.swing.SwingUtilities;
import java.awt.Font;
import static java.lang.Thread.sleep;
import javax.swing.UIManager;

public class MainWin extends javax.swing.JFrame {

    /**
     * Creates new form MainWin
     */
    public MainWin() {
        try {
            initComponents();
        } catch (Exception ex) {
            System.exit(1);//аварийное завершение при ошибке инициализации
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCtockComboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jEquitiesTable = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        ExitInMenu = new javax.swing.JMenuItem();
        ParamMenu = new javax.swing.JMenu();
        ReloadInMenu = new javax.swing.JMenuItem();
        AutoReloadCheck = new javax.swing.JCheckBoxMenuItem();
        DesignInMenu = new javax.swing.JMenu();
        SetNimbus = new javax.swing.JMenuItem();
        SetWindows = new javax.swing.JMenuItem();
        SetDarkFL = new javax.swing.JMenuItem();
        SetLightFL = new javax.swing.JMenuItem();
        TextInMenu = new javax.swing.JMenu();
        FontSizeInMenu = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        FontInSize = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        SetTextStyle = new javax.swing.JMenu();
        SetPlain = new javax.swing.JMenuItem();
        SetItalic = new javax.swing.JMenuItem();
        SetBold = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("WebScrap");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jCtockComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(WebScrap.stockNames()));
        jCtockComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCtockComboBoxItemStateChanged(evt);
            }
        });

        jEquitiesTable.setModel(new javax.swing.table.DefaultTableModel(
            WebScrap.data(),
            new String [] {
                "Название", "Цена", "Макс.", "Мин.", "Изм.", "Изм.%", "Объем", "Время"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false,
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jEquitiesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jEquitiesTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jEquitiesTable);

        FileMenu.setText("Файл");

        ExitInMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        ExitInMenu.setText("Выход");
        ExitInMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitInMenuActionPerformed(evt);
            }
        });
        FileMenu.add(ExitInMenu);

        jMenuBar1.add(FileMenu);

        ParamMenu.setText("Параметры");

        ReloadInMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        ReloadInMenu.setText("Обновить");
        ReloadInMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReloadInMenuActionPerformed(evt);
            }
        });
        ParamMenu.add(ReloadInMenu);

        AutoReloadCheck.setText("Автообноление");
        AutoReloadCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AutoReloadCheckActionPerformed(evt);
            }
        });
        ParamMenu.add(AutoReloadCheck);

        DesignInMenu.setText("Дизайн");

        SetNimbus.setText("Nimbus");
        SetNimbus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetNimbusActionPerformed(evt);
            }
        });
        DesignInMenu.add(SetNimbus);

        SetWindows.setText("Windows");
        SetWindows.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetWindowsActionPerformed(evt);
            }
        });
        DesignInMenu.add(SetWindows);

        SetDarkFL.setText("FlatLaf Dark");
        SetDarkFL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetDarkFLActionPerformed(evt);
            }
        });
        DesignInMenu.add(SetDarkFL);

        SetLightFL.setText("FlatLaf Light");
        SetLightFL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetLightFLActionPerformed(evt);
            }
        });
        DesignInMenu.add(SetLightFL);

        ParamMenu.add(DesignInMenu);

        TextInMenu.setText("Текст");

        FontSizeInMenu.setText("Размер");

        jMenuItem3.setText("15");
        FontSizeInMenu.add(jMenuItem3);

        jMenuItem6.setText("20");
        FontSizeInMenu.add(jMenuItem6);

        jMenuItem7.setText("25");
        FontSizeInMenu.add(jMenuItem7);

        TextInMenu.add(FontSizeInMenu);

        FontInSize.setText("Шрифт");

        jMenuItem2.setText("Courier");
        FontInSize.add(jMenuItem2);

        jMenuItem8.setText("jMenuItem8");
        FontInSize.add(jMenuItem8);

        TextInMenu.add(FontInSize);

        SetTextStyle.setText("Стиль");

        SetPlain.setText("Обычный");
        SetPlain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetPlainActionPerformed(evt);
            }
        });
        SetTextStyle.add(SetPlain);

        SetItalic.setText("Курсив");
        SetItalic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetItalicActionPerformed(evt);
            }
        });
        SetTextStyle.add(SetItalic);

        SetBold.setText("Жирный");
        SetTextStyle.add(SetBold);

        TextInMenu.add(SetTextStyle);

        ParamMenu.add(TextInMenu);

        jMenuBar1.add(ParamMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jCtockComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCtockComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 635, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCtockComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCtockComboBoxItemStateChanged
        //загрузка страницы с данными выбраной биржи
        WebScrap.loadStock(jCtockComboBox.getSelectedIndex());
        //установка котировок с загруженной страницы в таблицу
        jEquitiesTable.setModel(new javax.swing.table.DefaultTableModel(
                WebScrap.data(),
                new String[]{
                    "Название", "Цена", "Макс.", "Мин.", "Изм.", "Изм.%", "Объем", "Время"
                }));
    }//GEN-LAST:event_jCtockComboBoxItemStateChanged

    private void jEquitiesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jEquitiesTableMouseClicked
        EquitieWin(jEquitiesTable.rowAtPoint(evt.getPoint()));//создание окна с информацией по акции
    }//GEN-LAST:event_jEquitiesTableMouseClicked

    private void ExitInMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitInMenuActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitInMenuActionPerformed

    private void ReloadInMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReloadInMenuActionPerformed
        //загрузка страницы с данными выбраной биржи
        WebScrap.loadStock(jCtockComboBox.getSelectedIndex());
        //установка котировок с загруженной страницы в таблицу
        jEquitiesTable.setModel(new javax.swing.table.DefaultTableModel(
                WebScrap.data(),
                new String[]{
                    "Название", "Цена", "Макс.", "Мин.", "Изм.", "Изм.%", "Объем", "Время"
                }));
    }//GEN-LAST:event_ReloadInMenuActionPerformed

    private void SetNimbusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetNimbusActionPerformed
        UIConfigController.setUITheme("Nimbus");
        SwingUtilities.updateComponentTreeUI(this);
        pack();
        UIConfigController.saveUIConfig();
    }//GEN-LAST:event_SetNimbusActionPerformed

    private void SetWindowsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetWindowsActionPerformed
        UIConfigController.setUITheme("Windows");
        SwingUtilities.updateComponentTreeUI(this);
        pack();
        UIConfigController.saveUIConfig();
    }//GEN-LAST:event_SetWindowsActionPerformed

    private void SetDarkFLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetDarkFLActionPerformed
        UIConfigController.setUITheme("Flat Dark");
        SwingUtilities.updateComponentTreeUI(this);
        pack();
        UIConfigController.saveUIConfig();
    }//GEN-LAST:event_SetDarkFLActionPerformed

    private void SetLightFLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetLightFLActionPerformed
        UIConfigController.setUITheme("Flat Light");
        SwingUtilities.updateComponentTreeUI(this);
        pack();
        UIConfigController.saveUIConfig();
    }//GEN-LAST:event_SetLightFLActionPerformed

    private void AutoReloadCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AutoReloadCheckActionPerformed
        //автообновление данных, в главном фрейме, раз в 5 секунд (1 запрос в 5 секунд)
        if (AutoReloadCheck.isSelected()) {
            new Thread(() -> {
                try {
                    while (AutoReloadCheck.isSelected()) {//выход из цикла при отжатии кнопки 
                        //загрузка страницы с данными
                        WebScrap.loadStock(jCtockComboBox.getSelectedIndex());
                        int row = jEquitiesTable.getSelectedRow();//запоминаем выбранную строку
                        //установка котировок с загруженной страницы в таблицу
                        jEquitiesTable.setModel(new javax.swing.table.DefaultTableModel(
                                WebScrap.data(),
                                new String[]{
                                    "Название", "Цена", "Макс.", "Мин.", "Изм.", "Изм.%", "Объем", "Время"
                                }));
                        if (row >= 0) {
                            jEquitiesTable.setRowSelectionInterval(row, row);//устанавливаем выбранную ранее строку
                        }
                        sleep(5000);//ожидание 5 секунд
                    }
                    if (Thread.currentThread().isAlive()) {
                        Thread.currentThread().join();//завершение потока
                    }
                } catch (InterruptedException ex) {
                    new ErrorDialog(ex);
                }
            }).start();
        }
    }//GEN-LAST:event_AutoReloadCheckActionPerformed

    private void SetPlainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetPlainActionPerformed
        UIConfigController.setUIFont(new javax.swing.plaf.FontUIResource(
                new Font(UIManager.getFont("TextField.font").getName(),
                        Font.PLAIN,
                        UIManager.getFont("TextField.font").getSize())));
        SwingUtilities.updateComponentTreeUI(this);
        pack();
        UIConfigController.saveUIConfig();
    }//GEN-LAST:event_SetPlainActionPerformed

    private void SetItalicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetItalicActionPerformed
        UIConfigController.setUIFont(new javax.swing.plaf.FontUIResource(
                new Font(UIManager.getFont("TextField.font").getName(),
                        Font.ITALIC,
                        UIManager.getFont("TextField.font").getSize())));
        SwingUtilities.updateComponentTreeUI(this);
        pack();
        UIConfigController.saveUIConfig();
    }//GEN-LAST:event_SetItalicActionPerformed

    //создание окна с подробной информацией по выбранной акции
    private void EquitieWin(int row) {
        //окно
        javax.swing.JFrame tmp = new javax.swing.JFrame();
        tmp.setTitle("Установка соединения...");
        tmp.setSize(new java.awt.Dimension(400, 400));
        tmp.setLocation(500, 100);
        tmp.setDefaultCloseOperation(javax.swing.JFrame.HIDE_ON_CLOSE);
        //показ окна
        tmp.setLocationRelativeTo(null);
        tmp.setVisible(true);

        try {

            /*      Object [][] HistData= EquitieData.getFirst(); //таблица с данными
        int pairId = EquitieData.getSecond()[0];    
        int smlId = EquitieData.getSecond()[1];*/
            //получение данных по акции
            Pair<Object[][], Integer[]> EquitieData = new Pair<>(WebScrap.historyEquitie(row));
            tmp.setTitle(jEquitiesTable.getValueAt(row, 0).toString());
            //кнопки и текст. поля - управление
            var AccesButton = new javax.swing.JButton();
            var PeriodComboBox = new javax.swing.JComboBox<>();

            //вкладки
            var jTab = new javax.swing.JTabbedPane();
            var jTablePanel = new javax.swing.JPanel();//вкладка с таблицей

            javax.swing.JScrollPane jScrPane = new javax.swing.JScrollPane();
            javax.swing.JTable jHistTable = new javax.swing.JTable();//таблица
            jScrPane.setVerticalScrollBarPolicy(javax.swing.JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);

            //заполнение таблицы
            jHistTable.setModel(new javax.swing.table.DefaultTableModel(
                    EquitieData.getFirst(), //получение данных
                    new String[]{
                        "Дата", "Цена", "Откр.", "Макс.", "Мин.", "Объем", "Изм.%"
                    }
            ));
            jScrPane.setViewportView(jHistTable);//привязка таблицы к прокрутке
            javax.swing.GroupLayout jTableLayout = new javax.swing.GroupLayout(jTablePanel);//выравнивание по вкладке
            jTablePanel.setLayout(jTableLayout);
            jTableLayout.setHorizontalGroup(
                    jTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
            );
            jTableLayout.setVerticalGroup(
                    jTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrPane, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
            );
            jTab.add("Таблица", jTablePanel);//привязка панели с прокруткой и таблиецй к вкладке
            //рисование графика
            jTab.add("График", ChartBuilder.createPanel(tmp.getTitle(), EquitieData.getFirst()));//приязка графика к вкладке
            //настройка элементов управления
            DatePickerSettings dateSettings = new DatePickerSettings();
            dateSettings.setFormatForDatesCommonEra("dd/MM/yyyy");
            dateSettings.setFormatForDatesBeforeCommonEra("dd/MM/uuuu");

            DatePickerSettings dateSettings1 = new DatePickerSettings();
            dateSettings1.setFormatForDatesCommonEra("dd/MM/yyyy");
            dateSettings1.setFormatForDatesBeforeCommonEra("dd/MM/uuuu");

            DatePicker st_date = new DatePicker(dateSettings);
            DatePicker end_date = new DatePicker(dateSettings1);
            end_date.setDateToToday();
            st_date.setDate(LocalDate.now().minusMonths(1));
            PeriodComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Daily", "Weekly", "Monthly"}));

            AccesButton.setText("Применить");
            AccesButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    Object[][] newData = WebScrap.postHistoryReq(EquitieData.getSecond()[0], EquitieData.getSecond()[1], st_date.getText(), end_date.getText(), PeriodComboBox.getModel().getSelectedItem().toString());
                    jHistTable.setModel(new javax.swing.table.DefaultTableModel(
                            newData,
                            new String[]{
                                "Дата", "Цена", "Откр.", "Макс.", "Мин.", "Объем", "Изм.%"
                            }
                    ));
                    jTab.setComponentAt(1, ChartBuilder.createPanel(tmp.getTitle(), newData));
                }
            });
            //выравнивание вкладок с окном
            javax.swing.GroupLayout jFrameLayout = new javax.swing.GroupLayout(tmp.getContentPane());
            tmp.getContentPane().setLayout(jFrameLayout);
            jFrameLayout.setHorizontalGroup(
                    jFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTab, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrameLayout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(PeriodComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(st_date, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(end_date, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(AccesButton)
                                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );
            jFrameLayout.setVerticalGroup(
                    jFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrameLayout.createSequentialGroup()
                                    .addContainerGap()
                                    .addGroup(jFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(AccesButton)
                                            .addComponent(end_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(PeriodComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(st_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTab))
            );

            tmp.pack();
        } catch (Exception ex) {
            new ErrorDialog(ex);
            tmp.dispose();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //Create & display Splash Screen
        SplashScreen Splash = new SplashScreen();
        //загрузка настроек UIMahager из конфига
        UIConfigController.loadUIConfig();
        //init WebScrap library 
        WebScrap.init();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainWin().setVisible(true);
        });
        //dispose splash screen after mainForm display
        Splash.dispose();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBoxMenuItem AutoReloadCheck;
    private javax.swing.JMenu DesignInMenu;
    private javax.swing.JMenuItem ExitInMenu;
    private javax.swing.JMenu FileMenu;
    private javax.swing.JMenu FontInSize;
    private javax.swing.JMenu FontSizeInMenu;
    private javax.swing.JMenu ParamMenu;
    private javax.swing.JMenuItem ReloadInMenu;
    private javax.swing.JMenuItem SetBold;
    private javax.swing.JMenuItem SetDarkFL;
    private javax.swing.JMenuItem SetItalic;
    private javax.swing.JMenuItem SetLightFL;
    private javax.swing.JMenuItem SetNimbus;
    private javax.swing.JMenuItem SetPlain;
    private javax.swing.JMenu SetTextStyle;
    private javax.swing.JMenuItem SetWindows;
    private javax.swing.JMenu TextInMenu;
    private javax.swing.JComboBox<String> jCtockComboBox;
    private javax.swing.JTable jEquitiesTable;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
